0.1) create virtual env.
0.2) install postgresql
0.3) init django project (django >= 3.0, python >= 3.7)

1) Firts, we need to decide on DB structure.

My choice:

BaseGeoObject(abstract):
○ Name
○ Population
○ Area

Continents (implements BaseGeoObject)
○ Name
○ Population
○ Area

Countries (implements BaseGeoObject)
○ Continent (FK to Continents)
○ Name
○ Population
○ Area

Cities (implements BaseGeoObject)
○ Country (FK to Countries)
○ Name
○ Population
○ Area

CountryInfo:
○ Country (FK to Countries)
○ Country Number of Hospitals
○ Country Number of National Parks
○ Country Number of Rivers
○ Country Number of Schools

CityInfo:
○ City (FK to City)
○ City Number of roads
○ City Number of trees
○ City Number of Shops
○ City Number of Schools


Note: I could've use custom model managers (for is_deleted logic, for example), but it seems there is no big need.

2) Now let's add some validation in our models (clean_population, clean_area)

3) And pytests, obviously (pytest_geo_object)

TODO:

4) Some, data validation for geo_object_stat

5) Some pytests for geo_object_stat

6) Make "create, update, delete" interface for geo_object and geo_object_stat

7) Make some tests for "create, update, delete" interface
